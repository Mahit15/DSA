import java.io.*;
import java.util.*;

public class Main {


  public static void main(String[] args) throws Exception {
    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
    String exp = br.readLine();

    // code
    Stack<Integer> opnds = new Stack<>();
    Stack<Character> oprtrs = new Stack<>();
    for (int i = 0; i < exp.length(); i++) {
      char ch = exp.charAt(i);

      if (ch == '(') {
        oprtrs.push(ch);
      } else if (Character.isDigit(ch)) {
        opnds.push(ch - '0'); //char to int
      } else if (ch == ')') {
        while (opnds.peek() != '(') {
          char oprtr = oprtrs.pop();
          int v2 = opnds.pop();
          int v1 = opnds.pop();

          int opv = operation(v1, v2, oprtr);
          opnds.push(opv);
        }
        oprtrs.pop();
      } else if (ch == '+' || ch == '-' || ch == '*' || ch == '/') {
        while (oprtrs.size() > 0 && oprtrs.peek() != '(' && precedence(ch) <= precedence(oprtrs.peek())) {
          char oprtr = oprtrs.pop();
          int v2 = opnds.pop();
          int v1 = opnds.pop();

          int opv = operation(v1, v2, oprtr);
          opnds.push(opv);
        }
        oprtrs.push(ch);
      }
    }
    while (oprtrs.size() !=  0) {
      char oprtr = oprtrs.pop();
      int v2 = opnds.pop();
      int v1 = opnds.pop();

      int opv = operation(v1, v2, oprtr);
      opnds.push(opv);
    }
    System.out.print(opnds.peek());
  }


  public static int precedence(char oprtr) {
    if (oprtr == '+') {
      return 1;
    } else if (oprtr == '-') {
      return 1;
    } else if (oprtr == '*') {
      return 2;
    } else {
      return 2;
    }
  }
  public static int operation(int v1, int v2, char oprtr) {
    if (oprtr == '+') {
      return v1 + v2;
    } else if (oprtr == '-') {
      return v1 - v2;
    } else if (oprtr == '*') {
      return v1 * v2;
    } else {
      return v1 / v2;
    }
  }
}
